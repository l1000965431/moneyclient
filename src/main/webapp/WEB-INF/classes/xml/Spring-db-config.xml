<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       xmlns:tx="http://www.springframework.org/schema/tx">


    <!-- 获取数据源/使用数据源连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property value= "${jdbc.driverClassName}" name="driverClassName"/>
        <!--driverClassName指定了JDBC驱动类的全限定类名 -->
        <property value="${jdbc.url}" name="url"/>
        <!-- 数据库所在IP地址和数据库名-->
        <property value="${jdbc.username}" name="username"/>
        <property value="${jdbc.password}" name="password"/>
    </bean>

    <!-- 1111111111111111111111111111111111111111111声明Hibernate的Session工厂 111111111111111111111111111111111111111111111111111111111111111111-->
    <!-- 用注解的方式定义持久化，声明Hibernate的Session工厂 -->
    <!-- 声明了sessionFactory后，在DAO中可以使用@Autowired和@Qualifier注入属性访问sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.money.model"/>
        <!-- 使用应用程序管理类型的JPA  值为包路径-->
        <property name="configLocation" value = "WEB-INF/classes/xml/hibernate.cfg.xml" />
    </bean>

<!--    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->

<!--    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="false" propagation="NOT_SUPPORTED"/>
            <tx:method name="find*" read-only="false" propagation="NOT_SUPPORTED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            &lt;!&ndash;<tx:method name="*" propagation="REQUIRED"/>&ndash;&gt;
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="bussinessService"
                      expression="execution(* com.money.dao.*.*(..))"/>
        <aop:advisor pointcut-ref="bussinessService"
                     advice-ref="txAdvice"/>
    </aop:config>-->

    <!--<bean id="DaoFactory" class="com.money.dao.DaoFactory"></bean>-->

    <!--<bean id="hedao"-->
    <!--class="until.Hibernate.HibernateEntityDao" scope="prototype">-->
    <!--<property name="sessionFactory">-->
    <!--<ref bean="sessionFactory" />-->
    <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;这个和具体实体无关,所有dao共享&ndash;&gt;-->
    <!--<bean id="hgdao"-->
    <!--class="until.Hibernate.HibernateGenericDao">-->
    <!--<property name="sessionFactory">-->
    <!--<ref bean="sessionFactory" />-->
    <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;使用泛型DAO作为抽象基类&ndash;&gt;-->
    <!--<bean id="baseDao" class="BaseDao"-->
    <!--abstract="true" depends-on="hedao,hgdao">-->
    <!--<property name="hedao">-->
    <!--<ref bean="hedao" />-->
    <!--</property>-->
    <!--<property name="hgdao">-->
    <!--<ref bean="hgdao" />-->
    <!--</property>-->
    <!--</bean>-->

</beans>